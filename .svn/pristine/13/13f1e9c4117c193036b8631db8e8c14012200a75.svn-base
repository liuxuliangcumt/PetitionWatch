package com.realpower.petitionwatch.modelcity.fragment;

import android.support.annotation.NonNull;
import android.support.v7.widget.AppCompatEditText;
import android.support.v7.widget.AppCompatSpinner;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ListView;

import com.realpower.petitionwatch.R;
import com.realpower.petitionwatch.fragment.BaseFragment;
import com.realpower.petitionwatch.modelcity.activity.CityAlarmDetailActivity_;
import com.realpower.petitionwatch.modelcity.activity.CityAutoAlarmDetailActivity_;
import com.realpower.petitionwatch.modelcity.adapter.CityAlarmListAdapter;
import com.realpower.petitionwatch.modelcounty.activity.AlarmDetailActivity_;
import com.realpower.petitionwatch.modelcounty.activity.AutoAlarmDetailActivity_;
import com.realpower.petitionwatch.modelcounty.adapter.AlarmListAdapter;
import com.realpower.petitionwatch.modelcounty.bean.AlarmBean;
import com.realpower.petitionwatch.modelstaff.bean.PetitionBean;
import com.realpower.petitionwatch.modelwatch.adapter.SpinnerAdapter;
import com.realpower.petitionwatch.net.MyCallback;
import com.realpower.petitionwatch.net.param.AlarmAllParam;
import com.realpower.petitionwatch.net.result.AlarmListResult;
import com.realpower.petitionwatch.util.MyToastUtils;
import com.scwang.smartrefresh.layout.SmartRefreshLayout;
import com.scwang.smartrefresh.layout.api.RefreshLayout;
import com.scwang.smartrefresh.layout.listener.OnLoadMoreListener;
import com.scwang.smartrefresh.layout.listener.OnRefreshListener;

import org.androidannotations.annotations.AfterViews;
import org.androidannotations.annotations.EFragment;
import org.androidannotations.annotations.ViewById;

import java.util.ArrayList;
import java.util.List;

import retrofit2.Call;

@EFragment(R.layout.fragment_alarmlist)
public class CityAlarmListFragment extends BaseFragment {

    private List<AlarmBean.ListBean> data;
    private CityAlarmListAdapter adapter;
    @ViewById
    ListView lv_alarm;
    private String category;//yijian类别

    @ViewById
    SmartRefreshLayout refreshLayout;
    private int page = 1;
    private boolean isFristPage, isLastPage;

    @AfterViews
    void onInitView() {
        View headview = View.inflate(getContext(), R.layout.listview_headview, null);
        View booterView = View.inflate(getContext(), R.layout.listview_booterview, null);
        /*mySpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                if (position == 0) {
                    getAlarm("1", "");
                } else if (position == 1) {
                    getAlarm("1", "一键报警");
                } else {
                    getAlarm("1", "自动报警");
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {

            }
        });*/


        data = new ArrayList<>();
        adapter = new CityAlarmListAdapter(getActivity(), data);
        lv_alarm.addHeaderView(headview);
        lv_alarm.addFooterView(booterView);
        lv_alarm.setAdapter(adapter);
        lv_alarm.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                if ("一键报警".equals(data.get(position - 1).getCategory())) {
                    CityAlarmDetailActivity_.intent(getActivity()).id(data.get(position - 1).getId() + "").start();
                } else {
                    CityAutoAlarmDetailActivity_.intent(getActivity()).id(data.get(position - 1).getId() + "").start();
                }
            }
        });
        refreshLayout.setOnRefreshListener(new OnRefreshListener() {
            @Override
            public void onRefresh(@NonNull RefreshLayout refreshLayout) {
                data.clear();
                page = 1;
                getAlarm(page);
                refreshLayout.finishRefresh(1000);
            }
        });
        refreshLayout.setOnLoadMoreListener(new OnLoadMoreListener() {
            @Override
            public void onLoadMore(@NonNull RefreshLayout refreshLayout) {

                if (!isLastPage) {
                    page++;
                    getAlarm(page);
                    refreshLayout.finishLoadMore(1000);
                } else {
                    MyToastUtils.showToast("没有更多了");
                    refreshLayout.finishLoadMore();
                }
            }
        });
        getAlarm(1);
    }

    private void getAlarm(int page) {
        Call<AlarmListResult> call = apiService.alarmSelectAll(new AlarmAllParam(page + "", category));
        call.enqueue(new MyCallback<AlarmListResult>() {
            @Override
            public void onSuccessRequest(AlarmListResult result) {
                if ("1".equals(result.getStatus())) {
                    setData(result.getMessage());
                }
            }

            @Override
            public void afterRequest() {

            }

            @Override
            public void onFailureRequest(Call<AlarmListResult> call, Throwable t) {

            }
        });
    }

    private void setData(AlarmBean message) {
        isFristPage = message.isIsFirstPage();
        isLastPage = message.isIsLastPage();
        refreshLayout.setEnableLoadMore(!isLastPage);
        data.addAll(message.getList());
        adapter.notifyDataSetChanged();
    }

    public void setCategory(String category) {
        this.category = category;

    }
}
